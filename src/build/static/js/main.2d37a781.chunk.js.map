{"version":3,"sources":["assets/img/isqi-logo-revised.png","serviceWorker.js","Context.js","components/Headers.js","App.js","components/Table.js","components/Routes.js","components/Home.js","components/SignOut.js","components/BankPishnahadat.js","components/KarnameAmalCard.js","components/TagirKalemeUbour.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Context","createContext","ContextProvider","children","Provider","Headers","useState","Sal","isql","setIsql","useContext","className","defaultValue","onChange","selected","value","to","App","Tables","Routes","exact","path","component","Black","backgroundColor","color","fontFamily","Black1","src","require","alt","style","Table","height","fontBold","width","paddingLeft","Routess","map","routes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d37a781.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/isqi-logo-revised.aa1e5418.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React,{createContext} from 'react'\r\nconst Context=createContext()\r\nexport default function ContextProvider({children}) {\r\nreturn(\r\n    <Context.Provider>\r\n        {\r\n            children\r\n        }\r\n\r\n    </Context.Provider>\r\n)\r\n}","import React, {useContext, useState} from 'react'\r\nimport \"./Header.css\"\r\nimport {Link} from \"react-router-dom\";\r\nimport ContextProvider from \"../Context\";\r\nexport default function Headers() {\r\n    const [isql,setIsql]=useState({\r\n        Sal:1398\r\n    })\r\n    useContext(ContextProvider)\r\n    return(\r\n        <div className=\"Frag\">\r\n            <div>\r\n           <div className=\"Div\">\r\n               <p className=\"ebtekhabSal\" >\r\n                   انتخاب سال\r\n               </p>\r\n               <select\r\n                   defaultValue={isql}\r\n                   onChange={setIsql}\r\n                   className=\"Select\"\r\n               >\r\n                   <option selected value=\"1\">1397</option>\r\n                   <option selected value=\"2\">1398</option>\r\n\r\n               </select>\r\n           </div>\r\n                 <div className=\"Mah\">\r\n                <p className=\"entekhabMah\" >\r\n                    انتخاب ماه\r\n                </p>\r\n                <select\r\n                    defaultValue={isql}\r\n                    onChange={setIsql}\r\n                    className=\"MahSelect\"\r\n                >\r\n                    <option selected value=\"1\">مهر </option>\r\n                    <option selected value=\"2\">آبان </option>\r\n                    <option selected value=\"1\">آذر </option>\r\n                </select>\r\n                 </div>\r\n            </div>\r\n            <div className=\"Tablee\">\r\n                <Link to=\"/tables\" className='FishHoghughy'>نمایش فیش حقوقی</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport './App.css';\r\nimport Headers from \"./components/Headers\";\r\nimport ContextProvider from \"./Context\";\r\n\r\nfunction App() {\r\n    useContext(ContextProvider)\r\n    return (\r\n        <div className=\"App\">\r\n            <Headers/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React,{useContext,Fragment} from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport ContextProvider from \"../Context\";\r\nimport \"./table.css\"\r\nfunction Tables() {\r\n    const Rang1={\r\n        backgroundColor:\"black\",\r\n        color:\"white\",\r\nheight:30,\r\n        fontFamily:\"B Nazanin\",\r\n        fontBold:\"bold\",\r\n        width:100,\r\n        paddingLeft:100\r\n\r\n    }\r\n    const Rang2={\r\n        backgroundColor:\"black\",\r\n        color:\"white\",\r\n        height:30,\r\n        paddingLeft:100,\r\nwidth:100,\r\n        fontFamily:\"B Nazanin\",\r\n        fontBold:\"bold\"\r\n    }\r\n    const Rang3={\r\n        backgroundColor:\"black\",\r\n        color:\"white\",\r\n        height:30,\r\n        paddingLeft:100,\r\n        fontFamily:\"B Nazanin\",\r\n        fontBold:\"bold\",\r\n        width:100,\r\n    }\r\n    const Black={\r\n        backgroundColor:\"white\",\r\n        color:\"black\",\r\n        fontFamily:\"B Nazanin\"\r\n    }\r\n    const Black1={\r\n        backgroundColor:\"rgb(170,170,170)\",\r\n        color:\"black\",\r\n        fontFamily:\"B Nazanin\"\r\n    }\r\n    useContext(ContextProvider);\r\n    return (\r\n        <Fragment>\r\n            <div className='Sherkat'>\r\n                <img src={require(\"./../assets/img/isqi-logo-revised.png\")} alt=\"\"/>\r\n            </div>\r\n            <div className=\"Neveshte\">\r\n                <h1 style={{\r\n                    color:\"#0C5CCC\"\r\n                }}>فیش حقوقی دی ماه سال 1398</h1>\r\n            </div>\r\n        <div>\r\n\r\n        <Table className=\"Table\">\r\n            <thead>\r\n            <tr>\r\n                <th style={Rang1}>کارکرد</th>\r\n                <th style={Rang2}>مزایا</th>\r\n                <th style={Rang3}>کسور</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n\r\n                <td style={Black}>کارکرد عادی</td>\r\n                <td style={Black}>حقوق پایه</td>\r\n                <td style={Black}>بیمه سهم کارمند</td>\r\n\r\n            </tr>\r\n            <tr>\r\n\r\n                <td style={Black1}>ساعت اضافه کار</td>\r\n                <td style={Black1}>حق جذب</td>\r\n                <td style={Black1}>مالیات</td>\r\n\r\n            </tr>\r\n            <tr>\r\n\r\n                <td style={Black}>تعداد ایاب و ذهاب</td>\r\n                <td style={Black}>حق مسکن</td>\r\n                <td style={Black}>روند ماه جاری</td>\r\n\r\n            </tr>\r\n            <tr>\r\n                <td style={Black1}>کارکرد موثر</td>\r\n                <td style={Black1}>حق اولاد</td>\r\n                <td style={Black1}>بیمه تکمیلی سهم کارمند</td>\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n                <td\r\n                 >\r\n                </td>\r\n                <td style={Black}>اضافه کاری</td>\r\n                <td></td>\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n                <td\r\n                >\r\n                </td>\r\n                <td style={Black1}>ایاب و ذهاب</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                >\r\n                </td>\r\n                <td style={Black}>مزایای متفرقه</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                >\r\n                </td>\r\n                <td style={Black1}>روند ماه قبل</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                >\r\n                </td>\r\n                <td style={Black}>بن کارگری</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                >\r\n                </td>\r\n                <td style={Black1}>سنوات</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                    style={Black}\r\n                >\r\n                    دستمزد روزانه (ریال)\r\n                </td>\r\n                <td\r\n                    style={Black}\r\n                >\r\n\r\n                 جمع حقوق ومزایا (ریال)\r\n                </td>\r\n                <td\r\n                    style={Black}\r\n                >\r\nجمع کسور(ریال)\r\n\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n\r\n                >\r\n\r\n                </td>\r\n                <td\r\n                    style={Black1}\r\n                >\r\n                   خالص پرداختی (ریال)\r\n                </td>\r\n                <td>\r\n\r\n                </td>\r\n            </tr>\r\n\r\n            </tbody>\r\n        </Table>\r\n        </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Tables;\r\n","import Homes from \"./Home\";\r\nimport SignOut from \"./SignOut\";\r\nimport Headers from \"./Headers\";\r\nimport BankPishnahadat from \"./BankPishnahadat\";\r\nimport KarnameAmalCard from \"./KarnameAmalCard\";\r\nimport TagirKalameUbour from \"./TagirKalemeUbour\";\r\nimport App from \"../App\";\r\nimport Tables from \"./Table\";\r\nconst Routes=[\r\n    {\r\n\r\n      exact:true,\r\n      path:\"/\",\r\n      component:App\r\n    },\r\n    {\r\n        exact:true,\r\n        path:\"/homes\",\r\n        component:Homes\r\n    },\r\n    {\r\n        exact:true,\r\n        path:\"/signOut\",\r\n        component:SignOut\r\n    },\r\n\r\n    {\r\n        exact:true,\r\n        path:\"/headers\",\r\n        component:Headers\r\n    },\r\n    {\r\n        exact:true,\r\n        path:\"/bankPishnahadat\",\r\n        component:BankPishnahadat\r\n    },\r\n    {\r\n        exact:true,\r\n        path:\"/karnameAmalCard\",\r\n        component:KarnameAmalCard\r\n    },\r\n    {\r\n        exact:true,\r\n        path:\"/taghirKalameUbour\",\r\n        component:TagirKalameUbour\r\n    },\r\n    {\r\n        exact:true,\r\n        path:\"/tables\",\r\n        component:Tables\r\n    }\r\n\r\n]\r\nexport default Routes","import React, {Fragment, useContext} from 'react'\r\nimport ContextProvider from \"../Context\";\r\n\r\nexport default function Homes() {\r\n    useContext(ContextProvider)\r\n    return(\r\n        <Fragment>\r\n\r\n        </Fragment>\r\n    )\r\n}","import React, {Fragment, useContext} from 'react'\r\nimport ContextProvider from \"../Context\";\r\n\r\nexport default function SignOut() {\r\n    useContext(ContextProvider)\r\nreturn(\r\n    <Fragment>\r\n\r\n    </Fragment>\r\n)\r\n}","import React, {Fragment, useContext} from 'react'\r\nimport ContextProvider from \"../Context\";\r\n\r\nexport default function BankPishnahadat() {\r\nuseContext(ContextProvider)\r\n    return(\r\n        <Fragment>\r\n\r\n        </Fragment>\r\n    )\r\n}","import React, {Fragment, useContext} from 'react'\r\nimport ContextProvider from \"../Context\";\r\n\r\nexport default function KarnameAmalCard() {\r\n    useContext(ContextProvider)\r\n    return(\r\n        <Fragment>\r\n\r\n        </Fragment>\r\n    )\r\n}","import React, {Fragment, useContext} from 'react'\r\nimport ContextProvider from \"../Context\";\r\n\r\nexport default function TagirKalameUbour() {\r\n    useContext(ContextProvider)\r\n    return(\r\n        <Fragment>\r\n\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter,Route} from \"react-router-dom\";\r\nimport Routes from \"./components/Routes\";\r\nconst Routess=(\r\n    <BrowserRouter>\r\n        {\r\n            Routes.map((routes)=>(\r\n                <Route {...routes}/>\r\n            ))\r\n        }\r\n    </BrowserRouter>\r\n)\r\nReactDOM.render(Routess, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}